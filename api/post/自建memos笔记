{"content":"{\"__ud_title\":\"自建memos笔记\",\"__ud_tags\":[\"开源自建\"],\"__ud_update_time\":1733552465094,\"__ud_create_time\":1733453511992,\"__ud_draft\":false,\"type\":\"doc\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":1,\"id\":\"自建memos笔记\"},\"content\":[{\"type\":\"text\",\"text\":\"自建memos笔记\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"memos部署\"},\"content\":[{\"type\":\"text\",\"text\":\"memos部署\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"memos笔记类似于flomo的卡片笔记，可以使用docker一键部署\"}]},{\"type\":\"codeBlock\",\"attrs\":{\"language\":\"auto\"},\"content\":[{\"type\":\"text\",\"text\":\"docker pull ghcr.io/usememos/memos:0.22.3\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"版本可以自行选择，选这个版本是因为这个版本支持ai助理\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"然后\"}]},{\"type\":\"codeBlock\",\"attrs\":{\"language\":\"auto\"},\"content\":[{\"type\":\"text\",\"text\":\"docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos ghcr.io/usememos/memos:0.22.3\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"最后ip+端口即可访问了，memos的数据存放在 ~/.memos/ 中\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"n8n部署\"},\"content\":[{\"type\":\"text\",\"text\":\"n8n部署\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"n8n是一个低代码平台, 可以通过docker部署，现在简单说下在render上怎么部署\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"注册成功后：\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebt-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\"},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"镜像输入：docker.io/n8nio/n8n:latest\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebu-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"地区选新加坡\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebv-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"数据库继续白嫖 [supabase](\"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://supabase.com/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\"https://supabase.com/\"},{\"type\":\"text\",\"text\":\")\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebv-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"得到\"}]},{\"type\":\"codeBlock\",\"attrs\":{\"language\":null},\"content\":[{\"type\":\"text\",\"text\":\"postgresql://postgres.mpxiqrcjwtjqusjktffu:【创建数据库时得到的密码】@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres\"}]},{\"type\":\"paragraph\"},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"最后在reder的环境变量配置如下\"}]},{\"type\":\"bulletList\",\"content\":[{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_POSTGRESDB_DATABASE\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"postgres\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_POSTGRESDB_HOST\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"aws-0-ap-southeast-1.pooler.supabase.com\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_POSTGRESDB_PASSWORD\"},{\"type\":\"text\",\"text\":\": 【创建数据库时得到的密码】\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_POSTGRESDB_PORT\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"6543\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_POSTGRESDB_SCHEMA\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"public\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_POSTGRESDB_USER\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"postgres.mpxiqrcjwtjqusjktffu\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"DB_TYPE\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"postgresdb\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"WEBHOOK_URL\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"部署n8n成功后得到的网址\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"GENERIC_TIMEZONE\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"Asia/Shanghai\"}]}]},{\"type\":\"listItem\",\"content\":[{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"N8N_ENCRYPTION_KEY\"},{\"type\":\"text\",\"text\":\": \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"自己记得住的任意密码\"}]}]}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebv-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"最后用[uptime](\"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"http://dashboard.uptimerobot.com\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\"dashboard.uptimerobot.com\"},{\"type\":\"text\",\"text\":\")保活\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"AI助理配置\"},\"content\":[{\"type\":\"text\",\"text\":\"AI助理配置\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"通过reder的地址登陆上n8n\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://n8n.akashio.com/b121c42b66fe4963925baa70de007dd6\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\"https://n8n.akashio.com/b121c42b66fe4963925baa70de007dd6\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebv-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\"},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"最后得到了如下的内容：\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebv-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"网址授权：把url和token配置为对应memos的网址和生成的token\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebw-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"WebHook：在memos中Preferences--> Webhooks创建并填入n8n中webHook提供的地址\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m4c77ebw-image.png\",\"alt\":\"image.png\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"再在最后的Basic LLM节点加上三个，可以选gemmi，openapi啥的\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"gemmi就去\"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://aistudio.google.com/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\"google ai studio\"},{\"type\":\"text\",\"text\":\"创建一个就行\"}]},{\"type\":\"paragraph\"},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"数据备份\"},\"content\":[{\"type\":\"text\",\"text\":\"数据备份\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"这个就看个人吧，比如可以用github，也可以挂载一些网盘啥的\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"配置 cron job，在 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"/etc/crontab\"},{\"type\":\"text\",\"text\":\" 中增加自动备份定时任务，例如每天凌晨3点进行备份；\"}]},{\"type\":\"codeBlock\",\"attrs\":{\"language\":\"bash\"},\"content\":[{\"type\":\"text\",\"text\":\"0 03 * * * root sh /root/memos-backup/backup.sh\\n\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"这个是backup脚本，搞定\"}]},{\"type\":\"codeBlock\",\"attrs\":{\"language\":\"auto\"},\"content\":[{\"type\":\"text\",\"text\":\"# memos data directory is ~/.memos/\\ntar -czf memos-archive.tar.gz ~/.memos/memos_prod.db\\nmessage=\\\"backup in `date '+%Y%m%d%H%M'`\\\"\\ngit add -A .\\ngit commit -s -m \\\"${message}\\\"\\ngit push\"}]}]}","title":"自建memos笔记","tags":["开源自建"],"updateTime":1733552465094,"createTime":1733453511992,"draft":false,"intro":"memos笔记类似于flomo的卡片笔记，可以使用docker一键部署","html":"<h1 level=\"1\" id=\"自建memos笔记\">自建memos笔记</h1><h2 level=\"2\" id=\"memos部署\">memos部署</h2><p>memos笔记类似于flomo的卡片笔记，可以使用docker一键部署</p><div class=\"llt-code readonly\"><div class=\"language\">text</div><div class=\"wrapper\"><pre><code class=\"language-auto\">docker pull ghcr.io/usememos/memos:0.22.3</code></pre></div></div><p>版本可以自行选择，选这个版本是因为这个版本支持ai助理</p><p>然后</p><div class=\"llt-code readonly\"><div class=\"language\">text</div><div class=\"wrapper\"><pre><code class=\"language-auto\">docker run -d --name memos -p 5230:5230 -v ~/.memos/:/var/opt/memos ghcr.io/usememos/memos:0.22.3</code></pre></div></div><p>最后ip+端口即可访问了，memos的数据存放在 ~/.memos/ 中</p><h2 level=\"2\" id=\"n8n部署\">n8n部署</h2><p>n8n是一个低代码平台, 可以通过docker部署，现在简单说下在render上怎么部署</p><p>注册成功后：</p><img src=\"/post-assets/m4c77ebt-image.png\" alt=\"image.png\"><p></p><p>镜像输入：docker.io/n8nio/n8n:latest</p><img src=\"/post-assets/m4c77ebu-image.png\" alt=\"image.png\"><p>地区选新加坡</p><img src=\"/post-assets/m4c77ebv-image.png\" alt=\"image.png\"><p>数据库继续白嫖 [supabase](<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://supabase.com/\">https://supabase.com/</a>)</p><img src=\"/post-assets/m4c77ebv-image.png\" alt=\"image.png\"><p>得到</p><div class=\"llt-code readonly\"><div class=\"language\">bash</div><div class=\"wrapper\"><pre><code>postgresql://postgres.mpxiqrcjwtjqusjktffu:【创建数据库时得到的密码】@aws-0-ap-southeast-1.pooler.supabase.com:6543/postgres</code></pre></div></div><p></p><p>最后在reder的环境变量配置如下</p><ul><li><p><strong>DB_POSTGRESDB_DATABASE</strong>: <code>postgres</code></p></li><li><p><strong>DB_POSTGRESDB_HOST</strong>: <code>aws-0-ap-southeast-1.pooler.supabase.com</code></p></li><li><p><strong>DB_POSTGRESDB_PASSWORD</strong>: 【创建数据库时得到的密码】</p></li><li><p><strong>DB_POSTGRESDB_PORT</strong>: <code>6543</code></p></li><li><p><strong>DB_POSTGRESDB_SCHEMA</strong>: <code>public</code></p></li><li><p><strong>DB_POSTGRESDB_USER</strong>: <code>postgres.mpxiqrcjwtjqusjktffu</code></p></li><li><p><strong>DB_TYPE</strong>: <code>postgresdb</code></p></li><li><p><strong>WEBHOOK_URL</strong>: <code>部署n8n成功后得到的网址</code></p></li><li><p><strong>GENERIC_TIMEZONE</strong>: <code>Asia/Shanghai</code></p></li><li><p><strong>N8N_ENCRYPTION_KEY</strong>: <code>自己记得住的任意密码</code></p></li></ul><img src=\"/post-assets/m4c77ebv-image.png\" alt=\"image.png\"><p>最后用[uptime](<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://dashboard.uptimerobot.com\">dashboard.uptimerobot.com</a>)保活</p><h2 level=\"2\" id=\"AI助理配置\">AI助理配置</h2><p>通过reder的地址登陆上n8n</p><p><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://n8n.akashio.com/b121c42b66fe4963925baa70de007dd6\">https://n8n.akashio.com/b121c42b66fe4963925baa70de007dd6</a></p><img src=\"/post-assets/m4c77ebv-image.png\" alt=\"image.png\"><p></p><p>最后得到了如下的内容：</p><img src=\"/post-assets/m4c77ebv-image.png\" alt=\"image.png\"><p>网址授权：把url和token配置为对应memos的网址和生成的token</p><img src=\"/post-assets/m4c77ebw-image.png\" alt=\"image.png\"><p>WebHook：在memos中Preferences--&gt; Webhooks创建并填入n8n中webHook提供的地址</p><img src=\"/post-assets/m4c77ebw-image.png\" alt=\"image.png\"><p>再在最后的Basic LLM节点加上三个，可以选gemmi，openapi啥的</p><p>gemmi就去<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://aistudio.google.com/\">google ai studio</a>创建一个就行</p><p></p><h2 level=\"2\" id=\"数据备份\">数据备份</h2><p>这个就看个人吧，比如可以用github，也可以挂载一些网盘啥的</p><p>配置 cron job，在 <code>/etc/crontab</code> 中增加自动备份定时任务，例如每天凌晨3点进行备份；</p><div class=\"llt-code readonly\"><div class=\"language\">bash</div><div class=\"wrapper\"><pre><code class=\"language-bash\">0 03 * * * root sh /root/memos-backup/backup.sh\n</code></pre></div></div><p>这个是backup脚本，搞定</p><div class=\"llt-code readonly\"><div class=\"language\">text</div><div class=\"wrapper\"><pre><code class=\"language-auto\"># memos data directory is ~/.memos/\ntar -czf memos-archive.tar.gz ~/.memos/memos_prod.db\nmessage=&quot;backup in `date &apos;+%Y%m%d%H%M&apos;`&quot;\ngit add -A .\ngit commit -s -m &quot;${message}&quot;\ngit push</code></pre></div></div><script type=\"module\">const injectHtml = (root, html) => {\n  const iframe = document.createElement(\"iframe\");\n  const htmlContent = `<html><head></head><body>${html}</body></html>`;\n  iframe.style.width = \"100%\";\n  iframe.style.height = \"100%\";\n  iframe.onload = () => {\n    const doc = iframe.contentDocument || iframe.contentWindow?.document;\n    if (!doc) {\n      return;\n    }\n    doc.open();\n    doc.write(htmlContent);\n    doc.close();\n  };\n  root.replaceChildren(iframe);\n}\n  document.querySelectorAll('.playground')?.forEach(el=>{\n    const html = el.getAttribute('data-html');\n    if (html) {\n      injectHtml(el,html);\n    }\n    const indicator = document.createElement(\"div\");\n    indicator.className = \"indicator\";\n    const showCode = document.createElement(\"div\");\n    showCode.className = \"show-code\";\n    showCode.innerText = \"code\";\n    showCode.onclick = () => {\n      el.parentElement.classList.remove(\"preview-only\");\n    };\n    const showPreview = document.createElement(\"div\");\n    showPreview.className = \"show-preview\";\n    showPreview.innerText = \"preview\";\n    showPreview.onclick = () => {\n      el.parentElement.classList.add(\"preview-only\");\n    };\n    indicator.appendChild(showCode);\n    indicator.appendChild(showPreview);\n    el.parentElement.appendChild(indicator);\n    if (window.screen.width < 768) {\n      showPreview.click();\n    }\n  });</script>","cover":{"src":"/post-assets/m4c77ebt-image.png","alt":"image.png","title":null},"id":"自建memos笔记","path":"/posts/自建memos笔记.json"}