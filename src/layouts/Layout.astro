---
import "@/index.scss";
import Auth from "@/components/Auth/index.astro";
import Footer from "@/components/Footer.astro";

interface Props {
  title?: string;
  description?: string;
  footer?: boolean;
}

const { title, description, footer = true } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="apple-touch-icon-precomposed" sizes="144x144" href="/favicon.png" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <meta name="apple-mobile-web-app-title" content="URODELE" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover"
    />
    <meta name="description" content={description ?? "A self-owned full-static blog system"} />
    <link rel="icon" href="/favicon.ico" />
    <title>{["Urodele", title].reverse().join(" | ")}</title>
  </head>
  <body class="text-text bg-bg">
    <button id="toggleHeader" class="fixed top-2 left-2 text-button text-lg z-10 transition-colors" aria-label="menu">
      <div class="i-ri:menu-4-fill"></div>
    </button>
    <div id="headerOperations" class="fixed top-2 right-2 transition-all duration-300 opacity-0 transform -translate-x-full">
      <div class="flex gap-2 items-center">
        <slot name="operations" />
        {(<Auth />)}
      </div>
    </div>
    <slot />
    {footer && <Footer />}
    <script>
      let isOpen = false;
      let clickTimer: number | null = null;
      const toggleBtn = document.getElementById('toggleHeader');
      const headerOps = document.getElementById('headerOperations');
      
      // Detect if we're on the home page
      const isHomePage = window.location.pathname === '/';
      
      // Set initial state
      if (toggleBtn) {
        toggleBtn.classList.add(isHomePage ? 'text-white' : 'text-gray-800');
      }
      if (headerOps) {
        headerOps.classList.add(isHomePage ? 'text-white' : 'text-gray-800');
        // Show operations on non-homepage
        if (!isHomePage) {
          requestAnimationFrame(() => {
            headerOps.style.transform = 'translateX(0)';
            headerOps.style.opacity = '1';
          });
        }
      }
      
      toggleBtn?.addEventListener('click', (e) => {
        if (isHomePage) {
          // On homepage, handle double-click for toggle
          if (clickTimer === null) {
            clickTimer = setTimeout(() => {
              // Single click - navigate to homepage
              window.location.href = '/';
              clickTimer = null;
            }, 200);
          } else {
            // Double click - toggle operations
            clearTimeout(clickTimer);
            clickTimer = null;
            isOpen = !isOpen;
            if (headerOps) {
              headerOps.style.transform = isOpen ? 'translateX(0)' : 'translateX(-100%)';
              headerOps.style.opacity = isOpen ? '1' : '0';
            }
          }
        } else {
          // On other pages, just navigate home on click
          window.location.href = '/';
        }
      });
    </script>
  </body>
</html>
<style is:global>
  main {
    display: flex;
    width: 100%;
    padding: 0 16px;
    gap: 12px;
    justify-content: center;
  }
  .content {
    /* width: 100%; */
    max-width: 720px;
    /* padding: 0 24px; */
    overflow-x: hidden;
    flex: 1 1 0;
  }
</style>
